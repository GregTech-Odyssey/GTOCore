.aisle("                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
.aisle("AAAAAAAAAAAAAAAAAAA", "  AA   AA AA   AA  ", "  AA   AA AA   AA  ", "  AA   AA AA   AA  ", "  AA   AA AA   AA  ", "  AA   AA AA   AA  ", "  AA   AA AA   AA  ", "  AA   AA AA   AA  ", "  AA   AA AA   AA  ", "   A   AA AA   A   ", "   A   AA AA   A   ", "       AA AA       ", "                   ")
.aisle("AAAAAAAAAAAAAAAAAAA", "CCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCC", " CCCCCCCCCCCCCCCCC ", " CCCCCCCCCCCCCCCCC ", "  CCCCCCCCCCCCCCC  ", "  CCCCCCCCCCCCCCC  ", "  ACCCCCCCCCCCCCA  ", "   CCCCCCCCCCCCC   ", "   A CCCCCCCCC A   ", "       AA AA       ")
.aisle("AAAAAAAAAAAAAAAAAAA", "CCCCCCCCCCCCCCCCCCC", "FCJ             JCF", "FCT             TCF", "FCJ             JCF", " FT             TF ", " CJ             JC ", " GC             CG ", " GC             CG ", "  GK           KG  ", "  GCCC       CCCG  ", "   GGGCCCJCCCGGG   ", "     GGGGJGGGG     ")
.aisle("AAAAAAAAAAAAAAAAAAA", "CCCCCCCCCCCCCCCCCCC", "CCJ             JCC", "CCT             TCC", "CCJ             JCC", " CT             TC ", " CJ             JC ", " GC             CG ", " GC             CG ", "  GK           KG  ", "  LCCC       CCCL  ", "   LGGCCCJCCCGGL   ", "     GLGLJLGLG     ")
.aisle("AAAAAAAAAAAAAAAAAAA", "CCCCCCCCCCCCCCCCCCC", "FCJ             JCF", "FCT             TCF", "FCJ             JCF", " FT             TF ", " CJ             JC ", " GC             CG ", " GC             CG ", "  GK           KG  ", "  LCCC       CCCL  ", "   LGGCCCJCCCGGL   ", "     GLGLJLGLG     ")
.aisle("AAAGGGGGDDDGGGGGAAA", "CCCCCCCCCCCCCCCCCCC", "CCJ             JCC", "CCT             TCC", "CCJ             JCC", " CT             TC ", " CJ             JC ", " GC             CG ", " GC             CG ", "  GK           KG  ", "  GCCC       CCCG  ", "   GGGCCCJCCCGGG   ", "     GGGGJGGGG     ")
.aisle("AAAGGGGGDDDGGGGGAAA", "CCCCCCCCCCCCCCCCCCC", "CCCCCCCT   TCCCCCCC", " JCCCCCT   TCCCCCJ ", "CCCCCCCT   TCCCCCCC", " CCCCCCT   TCCCCCC ", " CCCCCCCCCCCCCCCCC ", "  CCCCCCCCCCCCCCC  ", "  CCCCCCCCCCCCCCC  ", "   CCCCCCCCCCCCC   ", "   CCCCCCCCCCCCC   ", "     CCCCCCCCC     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC I   ICCCI   I CB", "CC I   I H I   I CC", " J I   I   I   I J ", "CC I   I   I   I CC", " CCI   I   I   ICC ", " EJJ   I   I   JJE ", " EEJ   I   I   JEE ", "  EJIIIIIIIIIIIJE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", "CC       H       CC", " J               J ", "CC               CC", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", "CC       H       CC", " J               J ", "CC               CC", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC    O CCC O    CB", "CC    O  H  O    CC", " J    O R R O    J ", "CC    OFFFFFO    CC", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC      CCC      CB", "CC       H       CC", " J               J ", "CC    E     E    CC", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC I    CCC    I CB", "CC I     H     I CC", " J I           I J ", "CC I  E     E  I CC", " CCI           ICC ", " EJJ           JJE ", " EEJ           JEE ", "  EJ   I   I   JE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC    O CCC O    CB", "CC    O  H  O    CC", " J    O R R O    J ", "CC    OFFFFFO    CC", " CC             CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", "CC       H       CC", " J               J ", "CC               CC", " CC             CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", "CC       H       CC", " J               J ", "CC               CC", " CC             CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC   DS CCC SD   CB", "CC   DS  H  SD   CC", " J    S     S    J ", "CC    S     S    CC", " CC   SSSSSSS   CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC I DE CCC ED I CB", "CC I DE  H  ED I CC", " J I DE     ED I J ", "CC I DE     ED I CC", " CCI DEEEEEEED ICC ", " EJJ  DDDDDDD  JJE ", " EEJ           JEE ", "  EJ   I   I   JE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC   DD CCC DD   CB", "CC   DD  H  DD   CC", "CC    J     J    CC", "CC    J     J    CC", " CC   DDJJJDD   CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "DC   DD CCC DD   CD", "DC   DD  H  DD   CD", "CC    J     J    CC", "EC    J     J    CE", " CC   DDJJJDD   CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "DC   DD CCC DD   CD", "DC   DD  H  DD   CD", "CC    J     J    CC", "EC    J     J    CE", " CC   DDJJJDD   CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "CC   DE CCC ED   CC", "CC   DE  H  ED   CC", "CC   DE     ED   CC", "CC   DE     ED   CC", " CC  DEEEEEEED  CC ", " DD   DDDDDDD   DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", " C I DS CCC SD I C ", "SG I DS  H  SD I GS", " G I  S     S  I G ", "SC I  S     S  I CS", " CCI  SSSSSSS  ICC ", " EJJ           JJE ", " EEJ           JEE ", "  EJ   I   I   JE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", " C      CCC      C ", "SG       H       GS", " G               G ", "SC               CS", " CC             CC ", " DD             DD ", " DD             DD ", "  D    I   I    D  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", " C      CCC      C ", "SG       H       GS", " G               G ", "SC               CS", " CC             CC ", " DD             DD ", " DD             DD ", "  D    I   I    D  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", " C      CCC      C ", "SG       H       GS", " G               G ", "SC               CS", " CC             CC ", " DD             DD ", " DD             DD ", "  D    I   I    D  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "SC   L  CCC  L   CS", "SG   L   H   L   GS", " G   L  R R  L   G ", "SC   L  R R  L   CS", " CC  FLFR RFLF  CC ", " DD             DD ", " DD             DD ", "  D    I   I    D  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", " C I    CCC    I C ", " G I     H     I G ", " G I           I G ", "SC I           I CS", " CCI           ICC ", " EJJ           JJE ", " EEJ           JEE ", "  EJ   I   I   JE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", " C      CCC      C ", " G       H       G ", " G               G ", "SC               CS", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "SC      CCC      CS", "SG       H       GS", "SG               GS", "SC               CS", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", " C   Q  CCC  Q   C ", " G   Q   H   Q   G ", " G   Q  R R  Q   G ", " C   FRRR RRRF   C ", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", " C      CCC      C ", " G       H       G ", " G               G ", " C               C ", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC I Q  CCC  Q I CB", "CC I Q   H   Q I CC", "CC I Q  R R  Q I CC", "CC I FRRR RRRF I CC", " CCI           ICC ", " EJJ           JJE ", " EEJ           JEE ", "  EJ   I   I   JE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", " D       H       D ", " D               D ", "JC               CJ", " CC             CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", " D       H       D ", " D               D ", "JC               CJ", " CC             CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC    O CCC O    CB", "ED    O  H  O    DE", "ED    FF   FF    DE", "JC               CJ", " CC             CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC      CCC      CB", " D       H       DB", " D               DB", "JC               CJ", " CC             CC ", " PP             PP ", " PP             PP ", "  P    I   I    P  ", "  PPJ         JPP  ", "   EPPPPPJPPPPPE   ", "     PPPPEPPPP     ", "                   ")
.aisle("AAAGGCCGDDDGCCGGAAA", "BC I  O CCC O  I CB", " D I  O  H  O  I DB", " D I  FF   FF  I DB", "JC I           I CJ", " CCI           ICC ", " EJJ           JJE ", " EEJ           JEE ", "  EJ   I   I   JE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", " D       H       D~", " D               DB", "JC               CJ", " CC             CC ", " DD             DD ", " DD    F   F    DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", " D       H       DB", " D               DB", "JC     LM ML     CJ", " CC    L   L    CC ", " DD    L   L    DD ", " DD    CCCCC    DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", "ED       H       DE", "ED               DE", "JC               CJ", " CC             CC ", " DD             DD ", " DD    F   F    DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", " D       H       D ", " D               D ", "JC               CJ", " CC             CC ", " DD             DD ", " DD             DD ", "  DK   I   I   KD  ", "  DD           DD  ", "   DDDDDDDDDDDDD   ", "     DDDDDDDDD     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC I   ICCCI   I CB", " D I   I H I   I D ", " D I   I   I   I D ", "JC I   I   I   I CJ", " CCI   I   I   ICC ", " EJJ   I   I   JJE ", " EEJ   I   I   JEE ", "  EJIIIIIIIIIIIJE  ", "  EEJJJJJJJJJJJEE  ", "   EEEJJJJJJJEEE   ", "     EEEEEEEEE     ", "                   ")
.aisle("AAAGGGGGDDDGGGGGAAA", "BC      CCC      CB", "CC       H       CC", "CC               CC", "CC               CC", " CCD           DCC ", " FDD           DDF ", "  FD           DF  ", "   FD         DF   ", "    FDDDDDDDDDF    ", "     FCCCCCCCF     ", "       CCCCC       ", "                   ")
.aisle("AAAAAGGGDDDGGGAAAAA", " CC             CC ", " DD             DD ", " DD             DD ", " CC             CC ", " CCD           DCC ", " CDD           DDC ", "  CD           DC  ", "   CD         DC   ", "    CDDDDDDDDDC    ", "     CCCCCCCCC     ", "       CCCCC       ", "                   ")
.aisle(" AAAAAAAAAAAAAAAAA ", "  CCFDCC   CCDFCC  ", "  DDFDCC   CCDFDD  ", "  DDFDCC   CCDFDD  ", "  CCFDCC   CCDFCC  ", "  DDFDCCCCCCCDFDD  ", "  DDFDDDDDDDDDFDD  ", "  EDFDDDDDDDDDFDE  ", "   EDFFFFFFFFFDE   ", "    EDDDDDDDDDE    ", "     ECCCCCCCE     ", "        CCC        ", "                   ")
.aisle("  AAAAAAAAAAAAAAA  ", "   C  CC   CC  C   ", "   D  CC   CC  D   ", "   D  CC   CC  D   ", "   C  CC   CC  C   ", "   C  CCCCCCC  C   ", "   C           C   ", "   CC         CC   ", "    CCEEEEEEECC    ", "     CCCCCCCCC     ", "        CCC        ", "                   ", "                   ")
