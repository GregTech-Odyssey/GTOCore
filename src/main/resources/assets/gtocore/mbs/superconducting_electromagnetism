.aisle("     AAAAA     ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "     AAAAA     ")
.aisle("   AAAAAAAAA   ", "     AAAAA     ", "     AAAAA     ", "     AAAAA     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     AAAAA     ", "     AAAAA     ", "     AAAAA     ", "   AAAAAAAAA   ")
.aisle("  AAAAAAAAAAA  ", "   AACCCCCAA   ", "   AACCCCCAA   ", "   AA     AA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AA     AA   ", "   AACCCCCAA   ", "   AACCCCCAA   ", "  AAAAAAAAAAA  ")
.aisle(" AAAAAAAAAAAAA ", "  ACCCDDDCCCA  ", "  ACCC   CCCA  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  ACCC   CCCA  ", "  ACCCDDDCCCA  ", " AAAAAAAAAAAAA ")
.aisle(" AAAAAAAAAAAAA ", "  ACEEEEEEECA  ", "  AC       CA  ", "  A         A  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  A         A  ", "  AC       CA  ", "  ACEEEEEEECA  ", " AAAAAAAAAAAAA ")
.aisle("AAAAAAAAAAAAAAA", " ACCEEEEEEECCA ", " ACC       CCA ", " A           A ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " A           A ", " ACC       CCA ", " ACCEEEEEEECCA ", "AAAAAAAFAAAAAAA")
.aisle("AAAAAAAAAAAAAAA", " ACDEEECEEEDCA ", " AC   ECE   CA ", " A    ECE    A ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " A    ECE    A ", " AC   ECE   CA ", " ACDEEECEEEDCA ", "AAAAAAFFFAAAAAA")
.aisle("AAAAAAAAAAAAAAA", "AACDEECHCEEDCAA", "AAC   CHC   CAA", "AA    CHC    AA", "AB  C CHC C  BA", "AB    CHC    BA", "AB    CHC    BA", "AB  C CHC C  BA", "AB    CHC    BA", "AB    CHC    BA", "AB  C CHC C  BA", "AB    CHC    BA", "AB    CHC    BA", "AB  C CHC C  BA", "AB    CHC    BA", "AB    CHC    BA", "AB  C CHC C  BA", "AA    CHC    AA", "AAC   CHC   CAA", "AACDEECHCEEDCAA", "AAAAAFFFFFAAAAA")
.aisle("AAAAAAAAAAAAAAA", " ACDEEECEEEDCA ", " AC   ECE   CA ", " A    ECE    A ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " B    ECE    B ", " B    ECE    B ", " B  C ECE C  B ", " A    ECE    A ", " AC   ECE   CA ", " ACDEEECEEEDCA ", "AAAAAAFFFAAAAAA")
.aisle("AAAAAAAAAAAAAAA", " ACCEEEEEEECCA ", " ACC       CCA ", " A           A ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " B           B ", " B           B ", " B   C   C   B ", " A           A ", " ACC       CCA ", " ACCEEEEEEECCA ", "AAAAAAAFAAAAAAA")
.aisle(" AAAAAAAAAAAAA ", "  ACEEEEEEECA  ", "  AC       CA  ", "  A         A  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  B         B  ", "  B         B  ", "  B   CCC   B  ", "  A         A  ", "  AC       CA  ", "  ACEEEEEEECA  ", " AAAAAAAAAAAAA ")
.aisle(" AAAAAAAAAAAAA ", "  ACCCDDDCCCA  ", "  ACCC   CCCA  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  A         A  ", "  ACCC   CCCA  ", "  ACCCDDDCCCA  ", " AAAAAAAAAAAAA ")
.aisle("  AAAAAAAAAAA  ", "   AACCCCCAA   ", "   AACCCCCAA   ", "   AA     AA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AB     BA   ", "   AA     AA   ", "   AACCCCCAA   ", "   AACCCCCAA   ", "  AAAAAAAAAAA  ")
.aisle("   AAAAAAAAA   ", "     FFAFF     ", "     FFAFF     ", "     FFAFF     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     BBBBB     ", "     AAAAA     ", "     AAAAA     ", "     AAAAA     ", "   AAAAAAAAA   ")
.aisle("     AA~AA     ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "       A       ", "     AAAAA     ")
