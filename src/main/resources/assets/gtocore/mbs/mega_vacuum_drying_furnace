.aisle("                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "        MMM        ", "        MMM        ", "        MMM        ", "                   ", "                   ", "                   ", "                   ", "                   ")
.aisle("                   ", "                   ", "            F F    ", "           CCCCC   ", "          CCCCCCC  ", "         CCCCCCCCC ", "        MCCCQQQCCCF", "        MCCCQQQCCC ", "        MCCCQQQCCCF", "         CCCCCCCCC ", "          CCCCCCC  ", "           CCCCC   ", "            F F    ", "                   ")
.aisle("  CCCCC            ", "  KKKKK            ", "  KaaaK    FFFFF   ", "  Ka~aK   FFOOOFF  ", "  KaaaK  FFO   OFF ", "  KaaaK FFO     OFF", "  KKKKK PO       OF", "        PO       OF", "        PO       OF", "        FFO     OFF", "         FFO   OFF ", "          FFOOOFF  ", "           FFFFF   ", "                   ")
.aisle("  CCCCC  CCCCCCCCC ", "  KKKKK  CCCCCCCCC ", "  K   K  CCGGGGGCC ", "  L   L  CGGHIHGGC ", "  L   L  GG H H GG ", "  L   L GG  H H  GG", "  KKKKK GHHHHHHHHHG", "        GI  H H  IG", "        GHHHHHHHHHG", "        GG  H H  GG", "         GG H H GG ", "          GGHIHGG  ", "           GGBGG   ", "             B     ")
.aisle("  CCCCC  CCCCCCCCC ", "  KKKKK  CCCCCCCCC ", "  KKKKK  CCGGGGGCC ", "  KKKKK  CGGHIHGGC ", "  KKKKK  GG     GG ", "  KKKKK GG       GG", "  KKKKK GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "             B     ")
.aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "             B     ")
.aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "             B     ")
.aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "          BBBB     ")
.aisle("         CCCCCCCCC ", "         CCCCCCCCC ", "         CCGGGGGCC ", "         CGGHIHGGC ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "                   ")
.aisle("CCCCCCC  CCCCCCCCC ", "GGGGGGG  CCCCCCCCC ", "GGGGGGG  CCGGGGGCC ", "GGGGGGG  CGGHIHGGC ", "GGGGGGG  GG     GG ", "GGGGGGG GG       GG", "GGGGGGG HH       HH", "GGGGGGG GI       IG", "GGGGGGG HH       HH", "GGGGGGG GG       GG", "         GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "                   ")
.aisle("CCCCCCC  CCCCCCCCC ", "GGGGGGG  CCCCCCCCC ", "G     G  CCGGGGGCC ", "G     G  CGGHIHGGC ", "G     G  GG     GG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGGGGG GG       GG", "  JJJ    GG     GG ", "          GGHIHGG  ", "          BGGGGG   ", "                   ")
.aisle("CCCCCCC  CCCCCCCCC ", "GGGGGGG  CCCCCCCCC ", "G     G  CCGGGGGCC ", "G     G  CGGHIHGGC ", "G     G  GG     GG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGAGGG GG       GG", "  JAJ    GG     GG ", "   A      GGHIHGG  ", "   A      BGGGGG   ", "   AAAAAAAA        ")
.aisle("CCCCCCCAAAA CCC    ", "GGGGGGGA    CCC    ", "G   AAAA   FFFFF   ", "G     G   FGHIHGF  ", "G     G  FG     GF ", "G     G FG       GF", "G     G FH       HF", "G     G FI       IF", "G     G FH       HF", "GGGGGGG FG       GF", "  JJJ    FG     GF ", "          FGHIHGF  ", "          BFFFFF   ", "          A        ")
.aisle("CCCCCCC   A CCC    ", "GGGGGGG     CCC    ", "G     G    GGGGG   ", "G     G   GGHIHGG  ", "G     G  GG     GG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGAGGG GG       GG", "  JAJ    GG     GG ", "   A      GGHIHGG  ", "   A      BGGGGG   ", "   AAAAAAAA        ")
.aisle("CCCCCCC   A CCC A  ", "GGGGGGG     CCC A  ", "G     G    GGGGGA  ", "G     G   GGHIHGA  ", "G     G  GG     AG ", "G     G GG       GG", "G     G HH       HH", "G     G GI       IG", "G     G HH       HH", "GGGGGGG GG       AG", "  JJJ    GG     GA ", "          GGHIHGGA ", "          BGGGGG   ", "          A        ")
.aisle("CCCCCCC   A CCC A  ", "GGGGGGG     CCC    ", "GGGGGGG    GGGGG   ", "GGGGGGG   GGHIHGG  ", "GGGGGGG  GG     GG ", "GGGGGGG GG       GG", "GGGGGGG HH       HH", "GGGGGGG GI       IG", "GGGGGGG HH       HH", "GGGGGGG GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG A ", "          AAAAAAAA ")
.aisle("          A CCC A  ", "            CCC    ", "           GGGGG   ", "          GGHIHGG  ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG   ", "          A        ")
.aisle("          A CCC A  ", "            CCC    ", "           GGGGG   ", "          GGHIHGG  ", "         GG     GG ", "        GG       GG", "        GH       HG", "        GI       IG", "        GH       HG", "        GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG A ", "          AAAAAAAA ")
.aisle("CCCCCCC   A CCC A  ", "  EEE       CCC B  ", "  EEE      GGGGGB  ", "  EEE     GGHIHGB  ", "  EEE    GG     BG ", "  EEE   GG       GG", "  EEE   GH       HG", "  EEE   GI       IG", "  EEE   GH       HG", "   C    GG       GG", "         GG     GG ", "          GGHIHGGA ", "          BGGGGG   ", "          A        ")
.aisle("CCCCCCC   A CCC A  ", " EEEEE      CCC B  ", " E   E     GGGGG   ", " E   E    GGHIHGG  ", " E   E   GG     GG ", " E   E  GG       GG", " E   E  GH       HG", " E   E  GI       IG", " E   E  GH       HG", " CCCCC  GG       GG", "   C     GG     GG ", "          GGHIHGGA ", "          BGGGGG A ", "          AAAAAAAA ")
.aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E     E    GGGGG   ", "E     E   GGHIHGG  ", "E     E  GG     GG ", "E     E GG       GG", "E     E GH       HG", "E     E GI       IG", "E     E GH       HG", " C   C  GG       GG", "  CCC    GG     GG ", "  JJJ     GGHIHGGA ", "          BGGGGG   ", "          A        ")
.aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E  B  E    GGGGG   ", "E  B  E   GGHIHGG  ", "E  B  E  GG     GG ", "E  B  E GG       GG", "E  B  E GH       HG", "E  B  E GI       IG", "E  B  E GH       HG", "CC B CC GG       GG", " CCBCC   GG     GG ", "  JBJ     GGHIHGGA ", "   BBBBBBBBGGGGG A ", "          AAAAAAAA ")
.aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E  B  E    GGGGG   ", "E  B  E   GGHIHGG  ", "E  B  E  GG     GG ", "E  B  E GG       GG", "E  B  E GH       HG", "E  B  E GI       IG", "E  B  E GH       HG", "CC B CC GG       GG", " CCBCC   GG     GG ", "  JBJ     GGHIHGGA ", "   BBBBBBBBGGGGG   ", "          A        ")
.aisle("CCCCCCC   A CCC A  ", "EEEEEEE     CCC B  ", "E  B  E    GGGGG   ", "E     E   GGHIHGG  ", "E     E  GG     GG ", "E     E GG       GG", "E     E GH       HG", "E     E GI       IG", "E     E GH       HG", " C   C  GG       GG", "  CCC    GG     GG ", "  JJJ     GGHIHGGA ", "           GGGGG A ", "          AAAAAAAA ")
.aisle("CCCCCCC   A CCC A  ", " EEEEE      CCC B  ", " E B E     GGGGG   ", " E   E    GGHIHGG  ", " E   E   GG     GG ", " E   E  GG       GG", " E   E  GH       HG", " E   E  GI       IG", " E   E  GH       HG", " CCCCC  GG       GG", "   C     GG     GG ", "          GGHIHGG  ", "           GGGGG   ", "                   ")
.aisle("CCCCCCC   A CCC A  ", "  EEE       CCC B  ", "  EBE      FFFFF   ", "  EEE     FFFFFFF  ", "  EEE    FFFFFFFFF ", "  EEE   FFFFFFFFFFF", "  EEE   FFFFFFFFFFF", "  EEE   FFFFFFFFFFF", "  EEE   FFFFFFFFFFF", "   C    FFFFFFFFFFF", "         FFFFFFFFF ", "          FFFFFFF  ", "           FFFFF   ", "                   ")
.aisle("          AAAAAAA  ", "   BBBBBBBBBBBBBB  ", "   B         C     ", "           CCCCC   ", "          CCCCCCC  ", "         CCCCCCCCC ", "         CCCDDDCCC ", "        CCCCDDDCCCC", "         CCCDDDCCC ", "         CCCCCCCCC ", "          CCCCCCC  ", "           CCCCC   ", "             C     ", "                   ")
